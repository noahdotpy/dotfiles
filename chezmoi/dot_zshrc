export PATH="$HOME/.local/bin/:$PATH"
export PATH="$HOME/.local/bin/distrobox-exported/:$PATH"
export PATH="$HOME/.local/share/flatpak/exports/bin/:$PATH" # allow something like `org.gimp.GIMP`
export PATH="$HOME/go/bin/:$PATH"
export PATH="$HOME/.nix-profile/bin/:$PATH"
export PATH="$PATH:/run/host/nix/var/nix/profiles/default/bin/"
export PATH="$PATH:$HOME/.config/nvim/bin/"

read -r DISTRO_NAME < /etc/os-release
DISTRO_NAME=$(echo "$DISTRO_NAME" | awk -F '=' '{print $2}' | sed 's/"//g')

# True if all arguments are executable in $PATH
function is_bin_in_path {
  if [[ -n $ZSH_VERSION ]]; then
    builtin whence -p "$1" &> /dev/null
  else  # bash:
    builtin type -P "$1" &> /dev/null
  fi
  [[ $? -ne 0 ]] && return 1
  if [[ $# -gt 1 ]]; then
    shift  # We've just checked the first one
    is_bin_in_path "$@"
  fi
}

export PLUGIN_STORE="$HOME/.zsh/plugins/"

function clone-my-plugins() {
    plugin-clone github.com/zsh-users/zsh-syntax-highlighting
    plugin-clone github.com/zsh-users/zsh-history-substring-search
    plugin-clone github.com/zsh-users/zsh-autosuggestions
    plugin-clone github.com/joshskidmore/zsh-fzf-history-search
}

function plugin-clone() {
    PLUGIN_URL="$1"
    if [[ $PLUGIN_URL == "https://"* || $PLUGIN_URL == "http://"* ]]; then
        PLUGIN_FOLDER="$PLUGIN_STORE/$(echo $PLUGIN_URL | awk -F "://" '{print $2}')"
    else
        PLUGIN_FOLDER="$PLUGIN_STORE/$PLUGIN_URL"
        PLUGIN_URL="https://$PLUGIN_URL"
    fi
    git clone $PLUGIN_URL $PLUGIN_FOLDER
}

function plugins-clear() {
    rm -rf $PLUGIN_STORE
}

# declare a list of expandable aliases to fill up later
typeset -a ealiases
ealiases=()

# write a function for adding an alias to the list mentioned above
function abbrev() {
    alias $1
    # export $1
    ealiases+=(${1%%\=*})
}

# expand any aliases in the current line buffer
function expand-ealias() {
    if [[ $LBUFFER =~ "\<(${(j:|:)ealiases})\$" ]] && [[ "$LBUFFER" != "\\"* ]]; then
        zle _expand_alias
        zle expand-word
    fi
    zle magic-space
}
zle -N expand-ealias

# Bind the space key to the expand-alias function above, so that space will expand any expandable aliases
bindkey ' '        expand-ealias
bindkey -M isearch " "      magic-space     # normal space during searches

# A function for expanding any aliases before accepting the line as is and executing the entered command
expand-alias-and-accept-line() {
    expand-ealias
    zle .backward-delete-char
    zle .accept-line
}
zle -N accept-line expand-alias-and-accept-line

# Misc settings
setopt auto_cd
bindkey -v

# History settings
export HISTFILE=$HOME/.zsh_history
export HISTFILESIZE=1000000000
export HISTSIZE=1000000000
export SAVEHIST=1000
export HISTTIMEFORMAT="[%F %T] "
setopt EXTENDED_HISTORY
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt share_history

# SET ENVIRONMENTAL VARIABLES
export EDITOR="nvim"
export TERMINAL="kitty"
export BROWSER="brave-browser"

#############################
### ABBREVIATIONS/ALIASES ###
#############################

# Container shortcuts
function '@'() {
  if [ "$1" = "" ]; then
      distrobox-list
  else
      NAME="$1"
      # Get all sequential args after $1 to pass to distrobox-enter
      ARGS=$(echo $@ | awk '{for (i=2; i<NF; i++) printf $i " "; if (NF >= 2) print $NF; }')
      distrobox-enter $NAME -- "$ARGS"
  fi
}
abbrev '@host'="distrobox-host-exec"

# Program shortcuts

# [e]dit [e]xecutable
function ee() {
  which $1 && $EDITOR $(which $1)
}

abbrev x="clear"

abbrev dot="chezmoi"
abbrev dotsw="(cd ~/.local/share/chezmoi; home-manager switch --flake .)"
abbrev hm="home-manager"
abbrev hmsw="home-manager switch --flake $HOME/.local/share/chezmoi"

abbrev g="git"
abbrev gs="git status"
abbrev lg="lazygit"

abbrev ls="lsd"
abbrev l="lsd -Ahl"

abbrev sys="rpm-ostree"
abbrev sysupd="rpm-ostree upgrade"
abbrev sysinfo="rpm-ostree status"

abbrev nv="nvim"
abbrev lv="lvim"
abbrev sv="spacevim"
abbrev svim="spacevim"
abbrev emacsc="emacsclient -c -a 'emacs'"
abbrev py="python3"

abbrev "..2"="../.."
abbrev "..3"="../../.."
abbrev "..4"="../../../.."

###############
### PLUGINS ###
###############

# allows something like `z .dot` to go to `~/.dotfiles`
if command -v pazi &>/dev/null; then
  eval "$(pazi init zsh)" # or 'bash'
fi
abbrev zf='z --pipe="fzf"'
abbrev e="$EDITOR"
abbrev .="e ."
function ze() {
  pazi_cd $1 && $EDITOR .  
}
function zfe() {
  zf $1 && e .
}


eval "$(starship init zsh)"

eval "$(direnv hook zsh)"

source $PLUGIN_STORE/github.com/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh
source $PLUGIN_STORE/github.com/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $PLUGIN_STORE/github.com/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh
source $PLUGIN_STORE/github.com/joshskidmore/zsh-fzf-history-search/zsh-fzf-history-search.plugin.zsh

#################
### AUTOSTART ###
#################

PF_INFO="ascii title os host kernel uptime memory" pfetch

kjv $(sort -R $HOME/.local/share/zsh-bible/verses | head -n 1) | cowsay | lolcat -S 30

export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR"/ssh-agent.socket
