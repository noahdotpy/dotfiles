#!/usr/bin/env nu

def main [
  --yes(-y) # automatically respond yes to confirmation prompts
  --choose(-c): string # use these choices, skipping choices prompt - IDs separated by comma (eg: block-sites,block-flatpak-networking)
] {
    let choices = {
        "Block Networking for Current User": {
          id: "block-networking"
        }
        "Block Sites": {
          id: "block-sites"
        }
        "Remove Admin Privileges from Current User": {
          id: "unadmin"
        }
        "Block Networking for a Flatpak App": {
          id: "block-flatpak-networking"
        }
        "Set New Delay": {
          id: "set-delay"
        }
        "Disable Delay": {
          id: "disable-delay"
        }
        "Kill Processes": {
          id: "kill-processes"
        }
      # TODO: Add kill-gnome-windows and kill-plasma-windows (maybe detect which one to use based on $env.XDG_SESSION_DESKTOP)
    }
    let choices_names = $choices | columns

    let chosen = if ($choose | is-empty) {
      gum choose --no-limit ...$choices_names --header "Choose which options you want for lockdown (empty to exit): " | str replace "\n" "," | split row ','
    }
    
    let chosen_ids = if not ($choose | is-empty) {
      $choose | split row ',' | each {|e| $e | str trim}
    } else {
      $chosen | each {|chosen_name| $choices | get $chosen_name | get id}
    }

    if (($chosen | is-empty) and ($choose | is-empty)) {
      exit
    }
    
    let confirm_response = if $yes {
      "Yes"
    } else {
      gum choose Yes No --header $"Lockdown with these options: '($chosen_ids)'?)"
    }
    
    if $confirm_response == "No" {
      notify-send --app-name "IDWT" "Aborted Lockdown"
      exit
    }

    if "block-internet" in $chosen_ids {
      sudo iptables -A OUTPUT -m owner --uid-owner noah -j REJECT
      /usr/bin/idwt tighten config $'.networking.mode = "block"'
    }

    if "block-sites" in $chosen_ids {
      let sites = gum input --header="ADD SITE BLOCK: Sites separated by `,` (example: facebook.com, u.pluckeye.net/devices)" --header.foreground="99" | split row ',' | each {|e| $e | str trim}
      for site in $sites {
        /usr/bin/idwt tighten config $'.block-sites += ["($site)"]'
      }
    }

    if "unadmin" in $chosen_ids {
      /usr/bin/idwt tighten group remove $env.USER wheel
    }

    if "block-flatpak-networking" in $chosen_ids {
      let app_ids = gum input --header="ADD FLATPAK BLOCK: Flatpak IDs separated by commas (example: com.spotify.Client, com.discordapp.Discord)" --header.foreground="99" | split row ',' | each {|e| $e | str trim}
      for app_id in $app_ids {
        /usr/bin/idwt tighten config $'.toggle-flatpak-networking.block += ["($app_id)"]'
      }
    }

    if "set-delay" in $chosen_ids {
      let current_delay = cat /etc/idwt/config.yml |  from yaml | try {get delay} | default (-1 | into int) | into int
      let new_delay = gum input --header="SET NEW DELAY: Amount of seconds to delay new rules (example: 10)" --header.foreground="99" | into int
      if $new_delay >= $current_delay {
          let difference = calc $new_delay - $current_delay
          /usr/bin/idwt tighten config $'.delay += "($difference)"'
      } else {
        print "ERROR: You chose a new delay that is less than than the current delay"
      }
    }

    if "disable-delay" in $chosen_ids {
      /usr/bin/idwt tighten config '.tightener.delay-enabled = false'
    }

    if "kill-processes" in $chosen_ids {
      let procs = gum input --header="ADD PROCESS KILLING RULE: File Paths separated by commas (example: /home/noah/.local/bin/bad, /home/noah/)" --header.foreground="99" | split row ',' | each {|e| $e | str trim}
      for proc in $procs {
        /usr/bin/idwt tighten config $'.kill-processes.block += ["($proc)"]'
      }
    }

    # TODO: actually implement this
    # if "kill-plasma-windows" in $chosen_ids {
    #   let rule = {}
    #
    #   let class = gum input --header="Window Class (leave empty to skip)" --header.foreground="99"
    #   let title = gum input --header="Window Title (leave empty to skip)" --header.foreground="99"
    # }
      
    notify-send --app-name "IDWT" "Lockdown completed with these choices:" ($chosen_ids | str join "\n") -u critical
}
