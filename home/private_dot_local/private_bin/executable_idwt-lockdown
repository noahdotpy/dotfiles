#!/usr/bin/env nu

def main [--shutdown] {
    let choices = {
        "Block Internet for Current User": {
          command: {
            /usr/bin/idwt tighten config $"update user-networking.users.($env.USER).mode" block
          }
          id: "block-internet"
        }
        "Remove Admin Privileges from Current User": {
          command: {
            /usr/bin/idwt tighten group remove $env.USER wheel
          }
          id: "unadmin"
        }
        "Block Networking for a Flatpak App": {
          command: {
            let app_id = ugum input --header="Flatpak ID (example: com.spotify.Client)" --header.foreground="99"
            /usr/bin/idwt tighten config append block-flatpak-networking.apps $app_id
          }
          id: "block-flatapp-net"
        }
    }
    let choices_names = $choices | columns
    
    let chosen = ugum choose --no-limit ...$choices_names --header "Choose which options you want for lockdown (empty to exit): " | str replace "\n" "," | split row ','
    let chosen_ids = $chosen | each {|chosen_name| $choices | get $chosen_name | get id}
    
    if ($chosen | is-empty) {
      exit
    }

    for choice in $chosen {
      do ($choices | get $choice | get command)
    }
    
    let confirm_response = ugum choose Yes No --header $"Lockdown with these options: '($chosen)'?)"
    
    if $confirm_response == "No" {
        notify-send --app-name "I Don't Want To" "Aborted Lockdown"
    }
    
    notify-send --app-name "I Don't Want To" "Lockdown completed with these choices:" ($chosen | str join "\n") -u critical
    
    if $shutdown {
        systemctl poweroff
    }
    
    let shutdown_response = ugum choose Yes No --header "Do you want to shutdown your computer?"
    if $shutdown_response == "Yes" {
        let confirm_shutdown = ugum choose Yes No --header "Are you sure you want to shutdown your computer?"
        if $confirm_shutdown == "Yes" {
            systemctl poweroff
        } else {
            exit
        }
    }
}
